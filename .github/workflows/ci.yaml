name: CI
on:
  # Trigger on open, synchronize or reopen PR activity against the default base branch
  pull_request:
    branches: [ "master" ]
jobs:
  Validate-Metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Validate
        run: |
          # shellcheck disable=SC2016
          # Debug:
          # env
          # cat "${GITHUB_EVENT_PATH}" | jq .
          export BASE="master"
          export LOCATION="mappings"

          echo "Fetching base branch:"
          git fetch origin ${BASE} --depth=1
          echo

          echo "Obtaining PR file change diff:"
          echo
          DIFF="$(git --no-pager diff --name-only origin/"${BASE}" "${GITHUB_SHA}")"
          export DIFF
          echo "${DIFF}"
          echo

          rm -f fail-location fail-filename || :
          echo "Validating all changed PR files are in the ${LOCATION} directory:"
          echo
          echo "${DIFF}" | sort \
            | xargs -I{} bash -c '[[ {} =~ ^${LOCATION}/.*$ ]] && echo "pass: {}" || { echo "FAIL: {}"; touch fail-location; }'
          echo

          echo "Validating all changed PR files have a lower case hexidecimal file name of 56 to 120 chars with a \".json\" file extension:"
          echo
          echo "${DIFF}" | sort \
            | xargs -I{} bash -c '[[ {} =~ ^${LOCATION}/[a-f0-9]{56,120}\.json$ ]] && echo "pass: {}" || { echo "FAIL: {}"; touch fail-filename; }'
          echo

          [ -f "fail-location" ] && echo "ABORTING: File change location validation failed"
          [ -f "fail-filename" ] && echo "ABORTING: File name validation failed"
          [ -f "fail-location" ] || [ -f "fail-filename" ] && exit 1

          echo "Obtaining the latest metadata validation tool:"
          echo "curl -sLO https://hydra.iohk.io/job/Cardano/metadata-server/native.metadataValidatorTarball.x86_64-linux/latest-finished/download/1/metadata-validator.tar.gz"
          curl -sLO https://hydra.iohk.io/job/Cardano/metadata-server/native.metadataValidatorTarball.x86_64-linux/latest-finished/download/1/metadata-validator.tar.gz
          echo

          echo "Extracting the latest metadata validation tool:"
          tar -zxvf metadata-validator.tar.gz
          echo

          echo "Running the metadata validator on this PR:"
          echo
          echo "./metadata-validator ${GITHUB_REPOSITORY_OWNER} $(cat "${GITHUB_EVENT_PATH}" | jq -r '.repository.name') ${{ github.event.number }} --no-auth"
          ./metadata-validator "${GITHUB_REPOSITORY_OWNER}" "$(cat "${GITHUB_EVENT_PATH}" | jq -r '.repository.name')" "${{ github.event.number }}" --no-auth
          echo
